#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int main(){
  P1();//233168
  P2();//4613732
}

/*
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
*/

int P1(){
  int cnt=0;
  short x=999;
  while(x){
    if((x%3==0) || (x%5==0))
      cnt+=x;
    x--;
  }
  printf("%d \n",cnt);
}

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
int P2(){
  int a=1;
  int b=2;
  int b1;
  int sum=0;
  while (b<4000000){
    if (b%2==0) 
      sum+=b;
    b1=a+b;
    a=b;b=b1;
    
  }
  printf("%d \n",sum);
}

/*
Three mirrors are arranged in the shape of an equilateral triangle, with their reflective surfaces pointing inwards. There is an infinitesimal gap at each vertex of the triangle through which a laser beam may pass.

Label the vertices A, B and C. There are 2 ways in which a laser beam may enter vertex C, bounce off 11 surfaces, then exit through the same vertex: one way is shown below; the other is the reverse of that.


There are 80840 ways in which a laser beam may enter vertex C, bounce off 1000001 surfaces, then exit through the same vertex.

In how many ways can a laser beam enter at vertex C, bounce off 12017639147 surfaces, then exit through the same vertex?
 */
int P202(){
  long N=12017639147;
}

double reflect(double pos, double angle, int side){}
